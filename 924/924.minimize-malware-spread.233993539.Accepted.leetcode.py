class Solution:
    def minMalwareSpread(self, graph, initial):
        best_reduction = 0
        best_node = min(initial)
        initial = set(initial)

        def connected(node):
            if node in group:
                return
            group.add(node)
            [connected(nbor) for nbor, linked in enumerate(graph[node]) if linked == 1]
        visited = set()
        for node in range(len(graph)):
            if node in visited:
                continue
            group = set()
            connected(node)
            overlap = initial & group
            if len(overlap) == 1 and len(group) > best_reduction:
                best_reduction = len(group)
                best_node = overlap.pop()
            visited |= group
        return best_node
